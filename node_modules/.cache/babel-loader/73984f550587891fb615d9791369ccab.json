{"ast":null,"code":"var _jsxFileName = \"C:\\\\dangerzone-react\\\\src\\\\components\\\\Cards\\\\Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport server from \"../../api/server\";\nimport CustomCard from \"../Card/Card\";\nimport \"./Cards.css\";\nconst token = localStorage.getItem(\"token\");\n\nconst Cards = props => {\n  const history = useHistory();\n  const userData = useSelector(state => state.userDataReducer);\n  const [chapterIds, setChapterIds] = useState({});\n  const [chapters, setChapters] = useState([]);\n  const [completedChapters, setCompletedChapters] = useState([]);\n\n  const getChapters = () => {\n    server.get(\"/chapters/\", {\n      headers: {\n        authorization: `Token ${token}`\n      }\n    }).then(res => {\n      const tempData = {};\n      const chaptersLocal = [];\n      res.data.map(item => {\n        tempData[item.title] = item.id;\n        return chaptersLocal.push(item.title);\n      });\n      setChapters(chaptersLocal);\n      setChapterIds(tempData);\n    });\n  };\n\n  const getCompletedChapters = () => {\n    const completedChapters = [];\n    userData.chapterdata.map(item => {\n      return completedChapters.push(item.chapterTitle);\n    });\n    setCompletedChapters(completedChapters);\n  };\n\n  const handleClick = (e, chapter) => {\n    console.log(\"clicked\", chapter);\n    let currentChapterId = chapterIds[chapter];\n    localStorage.setItem(\"currentChapterId\", currentChapterId);\n    localStorage.setItem(\"currentChapter\", chapter);\n    history.push(\"/chapter/\");\n  };\n\n  useEffect(() => {\n    getChapters();\n    getCompletedChapters();\n  }, []); //eslint-disable-line\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, chapters.map((chapter, index) => {\n    if (completedChapters.includes(chapter)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"active-container\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CustomCard, {\n        className: \"inactive\",\n        bordered: true,\n        key: index,\n        index: index + 1,\n        title: chapter,\n        id: chapter.id,\n        hoverable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"active-container\",\n        onClick: e => handleClick(e, chapter),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CustomCard, {\n        className: \"active\",\n        bordered: true,\n        index: index + 1,\n        title: chapter,\n        id: chapter.id,\n        hoverable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }));\n    }\n  }))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["C:/dangerzone-react/src/components/Cards/Cards.js"],"names":["React","useEffect","useState","Row","useHistory","LoadingOutlined","useSelector","server","CustomCard","token","localStorage","getItem","Cards","props","history","userData","state","userDataReducer","chapterIds","setChapterIds","chapters","setChapters","completedChapters","setCompletedChapters","getChapters","get","headers","authorization","then","res","tempData","chaptersLocal","data","map","item","title","id","push","getCompletedChapters","chapterdata","chapterTitle","handleClick","e","chapter","console","log","currentChapterId","setItem","loading","index","includes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Row } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport server from \"../../api/server\";\r\nimport CustomCard from \"../Card/Card\";\r\n\r\nimport \"./Cards.css\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst Cards = props => {\r\n  const history = useHistory();\r\n  const userData = useSelector(state => state.userDataReducer);\r\n  const [chapterIds, setChapterIds] = useState({});\r\n  const [chapters, setChapters] = useState([]);\r\n  const [completedChapters, setCompletedChapters] = useState([]);\r\n\r\n  const getChapters = () => {\r\n    server\r\n      .get(\"/chapters/\", {\r\n        headers: { authorization: `Token ${token}` }\r\n      })\r\n      .then(res => {\r\n        const tempData = {};\r\n        const chaptersLocal = [];\r\n        res.data.map(item => {\r\n          tempData[item.title] = item.id;\r\n          return chaptersLocal.push(item.title);\r\n        });\r\n        setChapters(chaptersLocal);\r\n        setChapterIds(tempData);\r\n      });\r\n  };\r\n\r\n  const getCompletedChapters = () => {\r\n    const completedChapters = [];\r\n    userData.chapterdata.map(item => {\r\n      return completedChapters.push(item.chapterTitle);\r\n    });\r\n    setCompletedChapters(completedChapters);\r\n  };\r\n\r\n  const handleClick = (e, chapter) => {\r\n    console.log(\"clicked\", chapter);\r\n    let currentChapterId = chapterIds[chapter];\r\n    localStorage.setItem(\"currentChapterId\", currentChapterId);\r\n    localStorage.setItem(\"currentChapter\", chapter);\r\n    history.push(\"/chapter/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChapters();\r\n    getCompletedChapters();\r\n  }, []); //eslint-disable-line\r\n\r\n  return (\r\n    <>\r\n      {props.loading ? (\r\n        <LoadingOutlined />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <Row gutter={16} className=\"cards\">\r\n            {chapters.map((chapter, index) => {\r\n              if (completedChapters.includes(chapter)) {\r\n                return (\r\n                  <div className=\"active-container\" key={index}>\r\n                    <CustomCard\r\n                      className=\"inactive\"\r\n                      bordered={true}\r\n                      key={index}\r\n                      index={index + 1}\r\n                      title={chapter}\r\n                      id={chapter.id}\r\n                      hoverable={false}\r\n                    ></CustomCard>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div\r\n                    className=\"active-container\"\r\n                    onClick={e => handleClick(e, chapter)}\r\n                    key={index}\r\n                  >\r\n                    <CustomCard\r\n                      className=\"active\"\r\n                      bordered={true}\r\n                      index={index + 1}\r\n                      title={chapter}\r\n                      id={chapter.id}\r\n                      hoverable={true}\r\n                    ></CustomCard>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}