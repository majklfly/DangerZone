{"ast":null,"code":"var _jsxFileName = \"C:\\\\dangerzone-react\\\\src\\\\components\\\\Cards\\\\Cards.js\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Row } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { getChapters } from \"../../store/actions/chapter\";\nimport CustomCard from \"../Card/Card\";\nimport \"./Cards.css\";\n\nconst Cards = props => {\n  const history = useHistory();\n  const [chapterIds, setChapterIds] = useState({});\n  const [chapters, setChapters] = useState([]);\n  const [completedChapters, setCompletedChapters] = useState([]);\n\n  const sortChapters = () => {\n    console.log(\"runned2\");\n    const tempData = {};\n    const chaptersLocal = [];\n    console.log(\"props.chapters\", props.chapters);\n    props.chapters.map(item => {\n      console.log(\"item\", item);\n      tempData[item.title] = item.id;\n      return chaptersLocal.push(item.title);\n    });\n    setChapters(chaptersLocal);\n  };\n\n  const handleClick = (e, chapter) => {\n    console.log(\"clicked\", chapter);\n    let currentChapterId = chapterIds[chapter];\n    localStorage.setItem(\"currentChapterId\", currentChapterId);\n    localStorage.setItem(\"currentChapter\", chapter);\n    history.push(\"/chapter/\");\n  };\n\n  useEffect(sortChapters, []); //eslint-disable-line\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, chapters.map((chapter, index) => {\n    if (completedChapters.includes(chapter)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"active-container\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CustomCard, {\n        className: \"inactive\",\n        bordered: true,\n        key: index,\n        index: index + 1,\n        title: chapter,\n        id: chapter.id,\n        hoverable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"active-container\",\n        onClick: e => handleClick(e, chapter),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CustomCard, {\n        className: \"active\",\n        bordered: true,\n        index: index + 1,\n        title: chapter,\n        id: chapter.id,\n        hoverable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }));\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    chapters: state.chapterReducer.chapters,\n    userData: state.userDataReducer,\n    completedChapters: [state.userDataReducer.chapterdata]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getChapters: () => {\n      dispatch(types.GET_CHAPTERS);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);","map":{"version":3,"sources":["C:/dangerzone-react/src/components/Cards/Cards.js"],"names":["React","useEffect","useState","useCallback","Row","useHistory","LoadingOutlined","connect","getChapters","CustomCard","Cards","props","history","chapterIds","setChapterIds","chapters","setChapters","completedChapters","setCompletedChapters","sortChapters","console","log","tempData","chaptersLocal","map","item","title","id","push","handleClick","e","chapter","currentChapterId","localStorage","setItem","loading","index","includes","mapStateToProps","state","chapterReducer","userData","userDataReducer","chapterdata","mapDispatchToProps","dispatch","types","GET_CHAPTERS"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Row } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getChapters } from \"../../store/actions/chapter\";\r\nimport CustomCard from \"../Card/Card\";\r\n\r\nimport \"./Cards.css\";\r\n\r\nconst Cards = props => {\r\n  const history = useHistory();\r\n  const [chapterIds, setChapterIds] = useState({});\r\n  const [chapters, setChapters] = useState([]);\r\n  const [completedChapters, setCompletedChapters] = useState([]);\r\n\r\n  const sortChapters = () => {\r\n    console.log(\"runned2\");\r\n    const tempData = {};\r\n    const chaptersLocal = [];\r\n    console.log(\"props.chapters\", props.chapters);\r\n    props.chapters.map(item => {\r\n      console.log(\"item\", item);\r\n      tempData[item.title] = item.id;\r\n      return chaptersLocal.push(item.title);\r\n    });\r\n    setChapters(chaptersLocal);\r\n  };\r\n\r\n  const handleClick = (e, chapter) => {\r\n    console.log(\"clicked\", chapter);\r\n    let currentChapterId = chapterIds[chapter];\r\n    localStorage.setItem(\"currentChapterId\", currentChapterId);\r\n    localStorage.setItem(\"currentChapter\", chapter);\r\n    history.push(\"/chapter/\");\r\n  };\r\n\r\n  useEffect(sortChapters, []); //eslint-disable-line\r\n\r\n  return (\r\n    <>\r\n      {props.loading ? (\r\n        <LoadingOutlined />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <Row gutter={16} className=\"cards\">\r\n            {chapters.map((chapter, index) => {\r\n              if (completedChapters.includes(chapter)) {\r\n                return (\r\n                  <div className=\"active-container\" key={index}>\r\n                    <CustomCard\r\n                      className=\"inactive\"\r\n                      bordered={true}\r\n                      key={index}\r\n                      index={index + 1}\r\n                      title={chapter}\r\n                      id={chapter.id}\r\n                      hoverable={false}\r\n                    ></CustomCard>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div\r\n                    className=\"active-container\"\r\n                    onClick={e => handleClick(e, chapter)}\r\n                    key={index}\r\n                  >\r\n                    <CustomCard\r\n                      className=\"active\"\r\n                      bordered={true}\r\n                      index={index + 1}\r\n                      title={chapter}\r\n                      id={chapter.id}\r\n                      hoverable={true}\r\n                    ></CustomCard>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chapters: state.chapterReducer.chapters,\r\n    userData: state.userDataReducer,\r\n    completedChapters: [state.userDataReducer.chapterdata]\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getChapters: () => {\r\n      dispatch(types.GET_CHAPTERS);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Cards);\r\n"]},"metadata":{},"sourceType":"module"}