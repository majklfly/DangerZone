{"ast":null,"code":"var _jsxFileName = \"C:\\\\dangerzone-react\\\\src\\\\components\\\\UserBoard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Progress } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { getUserData } from \"../../store/actions/userdata\";\nimport server from \"../api/server\";\nimport \"./UserBoard.css\";\nconst token = localStorage.getItem(\"token\");\n\nconst UserBoard = props => {\n  const [percentage, setPercentage] = useState(0);\n  const username = localStorage.getItem(\"username\");\n\n  const calculatePercentage = async () => {\n    const chapters = await server.get(\"/chapters/\", {\n      headers: {\n        authorization: `Token ${token}`\n      }\n    });\n    const finishedChapters = [];\n    userData.chapterdata.map(item => {\n      return item.completed === true ? finishedChapters.push(item) : null;\n    });\n    const total = chapters.data.length;\n    const current = finishedChapters.length;\n    const percent = (current / (total / 100)).toFixed(0);\n    setPercentage(percent);\n  };\n\n  calculatePercentage();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    strokeColor: {\n      \"100%\": \"#364d79\"\n    },\n    type: \"circle\",\n    percent: percentage,\n    className: \"progressBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"iconsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UserOutlined, {\n    className: \"iconBoard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    onClick: actions.logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LogoutOutlined, {\n    className: \"iconBoard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcomeText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Hello \", userData.username)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.userDataReducer\n  };\n};\n\nexport default connect(mapStateToProps)(UserBoard);","map":{"version":3,"sources":["C:/dangerzone-react/src/components/UserBoard.js"],"names":["React","useState","useEffect","Progress","Link","UserOutlined","LogoutOutlined","connect","getUserData","server","token","localStorage","getItem","UserBoard","props","percentage","setPercentage","username","calculatePercentage","chapters","get","headers","authorization","finishedChapters","userData","chapterdata","map","item","completed","push","total","data","length","current","percent","toFixed","actions","logout","mapStateToProps","state","userDataReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,mBAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,uCAAP;AAEA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,iBAAP;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMgB,QAAQ,GAAGN,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;;AAEA,QAAMM,mBAAmB,GAAG,YAAY;AACtC,UAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,GAAP,CAAW,YAAX,EAAyB;AAC9CC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,SAAQZ,KAAM;AAAhC;AADqC,KAAzB,CAAvB;AAGA,UAAMa,gBAAgB,GAAG,EAAzB;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqBC,GAArB,CAAyBC,IAAI,IAAI;AAC/B,aAAOA,IAAI,CAACC,SAAL,KAAmB,IAAnB,GAA0BL,gBAAgB,CAACM,IAAjB,CAAsBF,IAAtB,CAA1B,GAAwD,IAA/D;AACD,KAFD;AAGA,UAAMG,KAAK,GAAGX,QAAQ,CAACY,IAAT,CAAcC,MAA5B;AACA,UAAMC,OAAO,GAAGV,gBAAgB,CAACS,MAAjC;AACA,UAAME,OAAO,GAAG,CAACD,OAAO,IAAIH,KAAK,GAAG,GAAZ,CAAR,EAA0BK,OAA1B,CAAkC,CAAlC,CAAhB;AACAnB,IAAAA,aAAa,CAACkB,OAAD,CAAb;AACD,GAZD;;AAaAhB,EAAAA,mBAAmB;AAEnB,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAE;AACX,cAAQ;AADG,KADf;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,OAAO,EAAEH,UALX;AAME,IAAA,SAAS,EAAC,aANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,OAAO,EAAEqB,OAAO,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CATF,eAiBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoCb,QAAQ,CAACP,QAA7C,CAjBF,CADF,CADF;AAuBD,CA1CD;;AA4CA,MAAMqB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLf,IAAAA,QAAQ,EAAEe,KAAK,CAACC;AADX,GAAP;AAGD,CAJD;;AAMA,eAAejC,OAAO,CAAC+B,eAAD,CAAP,CAAyBzB,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Progress } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nimport { getUserData } from \"../../store/actions/userdata\";\r\nimport server from \"../api/server\";\r\nimport \"./UserBoard.css\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst UserBoard = props => {\r\n  const [percentage, setPercentage] = useState(0);\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  const calculatePercentage = async () => {\r\n    const chapters = await server.get(\"/chapters/\", {\r\n      headers: { authorization: `Token ${token}` }\r\n    });\r\n    const finishedChapters = [];\r\n    userData.chapterdata.map(item => {\r\n      return item.completed === true ? finishedChapters.push(item) : null;\r\n    });\r\n    const total = chapters.data.length;\r\n    const current = finishedChapters.length;\r\n    const percent = (current / (total / 100)).toFixed(0);\r\n    setPercentage(percent);\r\n  };\r\n  calculatePercentage();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"userboard\">\r\n        <Progress\r\n          strokeColor={{\r\n            \"100%\": \"#364d79\"\r\n          }}\r\n          type=\"circle\"\r\n          percent={percentage}\r\n          className=\"progressBar\"\r\n        />\r\n        <div className=\"iconsContainer\">\r\n          <Link to=\"/profile/\">\r\n            <UserOutlined className=\"iconBoard\" />\r\n          </Link>\r\n          <Link to=\"/\" onClick={actions.logout}>\r\n            <LogoutOutlined className=\"iconBoard\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"welcomeText\">Hello {userData.username}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userDataReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserBoard);\r\n"]},"metadata":{},"sourceType":"module"}