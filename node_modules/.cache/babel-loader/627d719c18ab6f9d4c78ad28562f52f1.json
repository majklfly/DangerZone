{"ast":null,"code":"import _slicedToArray from\"C:\\\\dangerzone-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from\"react\";import{Carousel,Button,Spin}from\"antd\";import server from\"../api/server\";import\"./Quiz.css\";import{FinalQuizAnimationFailed}from\"./FinalQuizAnimationFailed\";import{FinalQuizAnimationSuccess}from\"./FinalQuizAnimationSuccess\";import{useSelector}from\"react-redux\";var token=localStorage.getItem(\"token\");var Quiz=function Quiz(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),answers=_useState4[0],setAnswers=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),chapterId=_useState6[0],setChapterId=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),questionIndex=_useState8[0],setQuestionIndex=_useState8[1];var userData=useSelector(function(state){return state.userDataReducer;});var ref=useRef();var isCompletedRef=useRef(false);var valCountRef=useRef(null);var currentChapter=localStorage.getItem(\"currentChapter\");var getQuestions=function getQuestions(){server.get(\"/question/\",{headers:{authorization:\"Token \".concat(token)}}).then(function(res){var questionsLocal=[];res.data.map(function(item){return item.chapterTitle===currentChapter?questionsLocal.push(item):null;});setQuestions(questionsLocal);});};var getAnswers=function getAnswers(){server.get(\"/answer/\",{headers:{authorization:\"Token \".concat(token)}}).then(function(res){var answersLocal=[];res.data.map(function(item){return item.chapterTitle===currentChapter?answersLocal.push(item):null;});setAnswers(answersLocal);});};var getChapterId=function getChapterId(){server.get(\"/chapters/\",{headers:{authorization:\"Token \".concat(token)}}).then(function(res){res.data.map(function(item){return item.title===currentChapter?setChapterId(item.id):null;});});};useEffect(function(){getQuestions();getAnswers();getChapterId();// eslint-disable-next-line\n},[]);var valuateAnswer=function valuateAnswer(answerIsCorrect){setQuestionIndex(function(questionIndex){return questionIndex+1;});if(answerIsCorrect===true){valCountRef.current=valCountRef.current+1;}if(valCountRef.current>3){isCompletedRef.current=true;}valuateQuiz();};var valuateQuiz=function valuateQuiz(){var postTestResults=function postTestResults(correct_answers,is_Completed,userId,chapterId,userDataId){console.log(\"is_Completed\",is_Completed);console.log(\"correct_answers\",correct_answers);console.log(\"userId\",userId);console.log(\"userDataId\",userDataId);console.log(\"chapterId\",chapterId);server.post(\"/chapterdata/\",{completed:is_Completed,correct_answers:correct_answers,user:userId,userData:userDataId,chapter:chapterId}).then(function(res){console.log(res);});};if(questionIndex===5){postTestResults(valCountRef.current,isCompletedRef.current,userData.id,chapterId,userData.id);}};if(questions===undefined||questions.length===0){return/*#__PURE__*/React.createElement(\"div\",{className:\"spinner\"},/*#__PURE__*/React.createElement(Spin,{size:\"large\"}),\";\");}else{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Carousel,{ref:ref,className:\"carouselQuiz\"},questions.map(function(question,index){return question.chapterTitle===currentChapter?/*#__PURE__*/React.createElement(\"div\",{key:index},/*#__PURE__*/React.createElement(\"h1\",{className:\"question-label\"},question.label),answers.map(function(answer,index){return answer.question===question.id?/*#__PURE__*/React.createElement(Button,{className:\"answer-buttons\",key:answer.id,onClick:function onClick(){valuateAnswer(answer.is_correct);setTimeout(function(){return ref.current.next();},300);}},answer.text):null;})):null;})),valCountRef.current===5&&questionIndex===6?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"quizFailedAnimation\"},/*#__PURE__*/React.createElement(FinalQuizAnimationSuccess,{validatedCount:valCountRef.current}))):null,valCountRef.current!==5&&questionIndex===6?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"quizFailedAnimation\"},/*#__PURE__*/React.createElement(FinalQuizAnimationFailed,{validatedCount:valCountRef.current}))):null));}};export default Quiz;","map":{"version":3,"sources":["C:/dangerzone-react/src/components/Quiz.js"],"names":["React","useRef","useState","useEffect","Carousel","Button","Spin","server","FinalQuizAnimationFailed","FinalQuizAnimationSuccess","useSelector","token","localStorage","getItem","Quiz","props","questions","setQuestions","answers","setAnswers","chapterId","setChapterId","questionIndex","setQuestionIndex","userData","state","userDataReducer","ref","isCompletedRef","valCountRef","currentChapter","getQuestions","get","headers","authorization","then","res","questionsLocal","data","map","item","chapterTitle","push","getAnswers","answersLocal","getChapterId","title","id","valuateAnswer","answerIsCorrect","current","valuateQuiz","postTestResults","correct_answers","is_Completed","userId","userDataId","console","log","post","completed","user","chapter","undefined","length","question","index","label","answer","is_correct","setTimeout","next","text"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Carousel, Button, Spin } from \"antd\";\r\nimport server from \"../api/server\";\r\nimport \"./Quiz.css\";\r\nimport { FinalQuizAnimationFailed } from \"./FinalQuizAnimationFailed\";\r\nimport { FinalQuizAnimationSuccess } from \"./FinalQuizAnimationSuccess\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst Quiz = props => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [chapterId, setChapterId] = useState(0);\r\n\r\n  const [questionIndex, setQuestionIndex] = useState(1);\r\n\r\n  const userData = useSelector(state => state.userDataReducer);\r\n\r\n  let ref = useRef();\r\n  let isCompletedRef = useRef(false);\r\n  let valCountRef = useRef(null);\r\n\r\n  const currentChapter = localStorage.getItem(\"currentChapter\");\r\n\r\n  const getQuestions = () => {\r\n    server\r\n      .get(\"/question/\", {\r\n        headers: { authorization: `Token ${token}` }\r\n      })\r\n      .then(res => {\r\n        let questionsLocal = [];\r\n        res.data.map(item => {\r\n          return item.chapterTitle === currentChapter\r\n            ? questionsLocal.push(item)\r\n            : null;\r\n        });\r\n        setQuestions(questionsLocal);\r\n      });\r\n  };\r\n\r\n  const getAnswers = () => {\r\n    server\r\n      .get(\"/answer/\", {\r\n        headers: { authorization: `Token ${token}` }\r\n      })\r\n      .then(res => {\r\n        let answersLocal = [];\r\n        res.data.map(item => {\r\n          return item.chapterTitle === currentChapter\r\n            ? answersLocal.push(item)\r\n            : null;\r\n        });\r\n        setAnswers(answersLocal);\r\n      });\r\n  };\r\n\r\n  const getChapterId = () => {\r\n    server\r\n      .get(\"/chapters/\", {\r\n        headers: { authorization: `Token ${token}` }\r\n      })\r\n      .then(res => {\r\n        res.data.map(item => {\r\n          return item.title === currentChapter ? setChapterId(item.id) : null;\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n    getAnswers();\r\n    getChapterId();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const valuateAnswer = answerIsCorrect => {\r\n    setQuestionIndex(questionIndex => questionIndex + 1);\r\n    if (answerIsCorrect === true) {\r\n      valCountRef.current = valCountRef.current + 1;\r\n    }\r\n    if (valCountRef.current > 3) {\r\n      isCompletedRef.current = true;\r\n    }\r\n    valuateQuiz();\r\n  };\r\n\r\n  const valuateQuiz = () => {\r\n    const postTestResults = (\r\n      correct_answers,\r\n      is_Completed,\r\n      userId,\r\n      chapterId,\r\n      userDataId\r\n    ) => {\r\n      console.log(\"is_Completed\", is_Completed);\r\n      console.log(\"correct_answers\", correct_answers);\r\n      console.log(\"userId\", userId);\r\n      console.log(\"userDataId\", userDataId);\r\n      console.log(\"chapterId\", chapterId);\r\n      server\r\n        .post(\"/chapterdata/\", {\r\n          completed: is_Completed,\r\n          correct_answers: correct_answers,\r\n          user: userId,\r\n          userData: userDataId,\r\n          chapter: chapterId\r\n        })\r\n        .then(res => {\r\n          console.log(res);\r\n        });\r\n    };\r\n\r\n    if (questionIndex === 5) {\r\n      postTestResults(\r\n        valCountRef.current,\r\n        isCompletedRef.current,\r\n        userData.id,\r\n        chapterId,\r\n        userData.id\r\n      );\r\n    }\r\n  };\r\n\r\n  if (questions === undefined || questions.length === 0) {\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spin size=\"large\" />;\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Carousel ref={ref} className=\"carouselQuiz\">\r\n            {questions.map((question, index) => {\r\n              return question.chapterTitle === currentChapter ? (\r\n                <div key={index}>\r\n                  <h1 className=\"question-label\">{question.label}</h1>\r\n                  {answers.map((answer, index) => {\r\n                    return answer.question === question.id ? (\r\n                      <Button\r\n                        className=\"answer-buttons\"\r\n                        key={answer.id}\r\n                        onClick={() => {\r\n                          valuateAnswer(answer.is_correct);\r\n                          setTimeout(() => ref.current.next(), 300);\r\n                        }}\r\n                      >\r\n                        {answer.text}\r\n                      </Button>\r\n                    ) : null;\r\n                  })}\r\n                </div>\r\n              ) : null;\r\n            })}\r\n          </Carousel>\r\n          {valCountRef.current === 5 && questionIndex === 6 ? (\r\n            <div>\r\n              <div className=\"quizFailedAnimation\">\r\n                <FinalQuizAnimationSuccess\r\n                  validatedCount={valCountRef.current}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {valCountRef.current !== 5 && questionIndex === 6 ? (\r\n            <div>\r\n              <div className=\"quizFailedAnimation\">\r\n                <FinalQuizAnimationFailed\r\n                  validatedCount={valCountRef.current}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}