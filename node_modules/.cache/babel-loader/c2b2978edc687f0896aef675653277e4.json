{"ast":null,"code":"import { types } from \"./actionTypes\";\nimport server from \"../../api/server\";\nconst token = localStorage.getItem(\"token\");\nexport const getQuiz = quizId => async dispatch => {\n  await server.get(`/quiz/${quizId}/`, {\n    headers: {\n      authorization: `Token ${token}`\n    }\n  }).then(res => {\n    dispatch({\n      type: types.GET_QUIZ,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const postTestResults = (correct_answers, is_Completed, userId, chapterId, userDataId) => {\n  server.post(\"/chapterdata/\", {\n    completed: is_Completed,\n    correct_answers: correct_answers,\n    user: userId,\n    userData: userDataId,\n    chapter: chapterId\n  }, {\n    headers: {\n      authorization: `Token ${token}`\n    }\n  }).then(res => {\n    console.log(res);\n  });\n};","map":{"version":3,"sources":["C:/dangerzone-react/src/store/actions/quiz.js"],"names":["types","server","token","localStorage","getItem","getQuiz","quizId","dispatch","get","headers","authorization","then","res","type","GET_QUIZ","payload","data","catch","err","console","log","postTestResults","correct_answers","is_Completed","userId","chapterId","userDataId","post","completed","user","userData","chapter"],"mappings":"AAAA,SAASA,KAAT,QAAsB,eAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,OAAO,MAAMC,OAAO,GAAGC,MAAM,IAAI,MAAMC,QAAN,IAAkB;AACjD,QAAMN,MAAM,CACTO,GADG,CACE,SAAQF,MAAO,GADjB,EACqB;AACvBG,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,SAAQR,KAAM;AAAhC;AADc,GADrB,EAIHS,IAJG,CAIEC,GAAG,IAAI;AACXL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEb,KAAK,CAACc,QADL;AAEPC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GATG,EAUHC,KAVG,CAUGC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAZG,CAAN;AAaD,CAdM;AAgBP,OAAO,MAAMG,eAAe,GAAG,CAC7BC,eAD6B,EAE7BC,YAF6B,EAG7BC,MAH6B,EAI7BC,SAJ6B,EAK7BC,UAL6B,KAM1B;AACHzB,EAAAA,MAAM,CACH0B,IADH,CAEI,eAFJ,EAGI;AACEC,IAAAA,SAAS,EAAEL,YADb;AAEED,IAAAA,eAAe,EAAEA,eAFnB;AAGEO,IAAAA,IAAI,EAAEL,MAHR;AAIEM,IAAAA,QAAQ,EAAEJ,UAJZ;AAKEK,IAAAA,OAAO,EAAEN;AALX,GAHJ,EAUI;AACEhB,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,SAAQR,KAAM;AAAhC;AADX,GAVJ,EAcGS,IAdH,CAcQC,GAAG,IAAI;AACXO,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACD,GAhBH;AAiBD,CAxBM","sourcesContent":["import { types } from \"./actionTypes\";\r\nimport server from \"../../api/server\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nexport const getQuiz = quizId => async dispatch => {\r\n  await server\r\n    .get(`/quiz/${quizId}/`, {\r\n      headers: { authorization: `Token ${token}` }\r\n    })\r\n    .then(res => {\r\n      dispatch({\r\n        type: types.GET_QUIZ,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const postTestResults = (\r\n  correct_answers,\r\n  is_Completed,\r\n  userId,\r\n  chapterId,\r\n  userDataId\r\n) => {\r\n  server\r\n    .post(\r\n      \"/chapterdata/\",\r\n      {\r\n        completed: is_Completed,\r\n        correct_answers: correct_answers,\r\n        user: userId,\r\n        userData: userDataId,\r\n        chapter: chapterId\r\n      },\r\n      {\r\n        headers: { authorization: `Token ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n      console.log(res);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}