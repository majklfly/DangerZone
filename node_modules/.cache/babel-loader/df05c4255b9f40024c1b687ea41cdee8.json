{"ast":null,"code":"import { types } from \"../../actions/actionTypes\";\nimport server from \"../../api/server\";\nexport const authStart = userData => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userData) => {\n  return {\n    type: types.AUTH_SUCCESS,\n    token: token,\n    userData: localStorage.getItem(\"username\")\n  };\n};\nexport const authFail = error => {\n  return {\n    type: types.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"length\");\n  localStorage.removeItem(\"username\");\n  localStorage.removeItem(\"currentChapter\");\n  localStorage.removeItem(\"userId\");\n  localStorage.removeItem(\"persist:root\");\n  window.location.reload();\n  return {\n    type: types.AUTH_LOGOUT\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    console.log(\"AuthLogin \", username, password);\n    localStorage.setItem(\"username\", username);\n    const userData = localStorage.getItem(\"username\");\n    server.post(\"/rest-auth/login/\", {\n      username,\n      password\n    }).then(res => {\n      const token = res.data.key;\n      localStorage.setItem(\"token\", token);\n      dispatch(authSuccess(token, userData));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    server.post(\"/rest-auth/registration\", {\n      username,\n      email,\n      password1,\n      password2\n    }).then(res => {\n      const token = res.data.key;\n      localStorage.setItem(\"token\", token);\n      dispatch(authSuccess(token));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      dispatch(authSuccess(token));\n    }\n  };\n};","map":{"version":3,"sources":["C:/dangerzone-react/src/store/actions/auth.js"],"names":["types","server","authStart","userData","type","actionTypes","AUTH_START","authSuccess","token","AUTH_SUCCESS","localStorage","getItem","authFail","error","AUTH_FAIL","logout","removeItem","window","location","reload","AUTH_LOGOUT","authLogin","username","password","dispatch","console","log","setItem","post","then","res","data","key","catch","err","authSignup","email","password1","password2","authCheckState","undefined"],"mappings":"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","sourcesContent":["import { types } from \"../../actions/actionTypes\";\r\nimport server from \"../../api/server\";\r\n\r\nexport const authStart = userData => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userData) => {\r\n  return {\r\n    type: types.AUTH_SUCCESS,\r\n    token: token,\r\n    userData: localStorage.getItem(\"username\")\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: types.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"length\");\r\n  localStorage.removeItem(\"username\");\r\n  localStorage.removeItem(\"currentChapter\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"persist:root\");\r\n  window.location.reload();\r\n  return {\r\n    type: types.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const authLogin = (username, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    console.log(\"AuthLogin \", username, password);\r\n    localStorage.setItem(\"username\", username);\r\n    const userData = localStorage.getItem(\"username\");\r\n    server\r\n      .post(\"/rest-auth/login/\", { username, password })\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        localStorage.setItem(\"token\", token);\r\n        dispatch(authSuccess(token, userData));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    server\r\n      .post(\"/rest-auth/registration\", {\r\n        username,\r\n        email,\r\n        password1,\r\n        password2\r\n      })\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        localStorage.setItem(\"token\", token);\r\n        dispatch(authSuccess(token));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === undefined) {\r\n      dispatch(logout());\r\n    } else {\r\n      dispatch(authSuccess(token));\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}