{"ast":null,"code":"var _jsxFileName = \"C:\\\\dangerzone-react\\\\src\\\\components\\\\Quiz\\\\Quiz.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Carousel, Button, Spin } from \"antd\";\nimport { connect } from \"react-redux\";\nimport \"./Quiz.css\";\nimport { FinalQuizAnimationFailed } from \"../FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\nimport { FinalQuizAnimationSuccess } from \"../FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\nimport { postTestResults } from \"../../store/actions/quiz\";\n\nconst Quiz = props => {\n  const [questionIndex, setQuestionIndex] = useState(1);\n  let ref = useRef();\n  let isCompletedRef = useRef(false);\n  let valCountRef = useRef(null);\n\n  const valuateAnswer = answerIsCorrect => {\n    setQuestionIndex(questionIndex => questionIndex + 1);\n\n    if (answerIsCorrect === true) {\n      valCountRef.current = valCountRef.current + 1;\n    }\n\n    if (valCountRef.current > 3) {\n      isCompletedRef.current = true;\n    }\n\n    if (questionIndex === 6) {\n      postTestResults(valCountRef.current, isCompletedRef.current, props.user, props.chapterId, props.userDataId);\n    }\n  };\n\n  console.log(props.questionIndex);\n\n  if (props.questions === undefined) {\n    return /*#__PURE__*/React.createElement(Spin, {\n      size: \"large\",\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    ref: ref,\n    className: \"carouselQuiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, props.questions.questions.map((question, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"question-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, question.label), \";\", question.answers.map(answer => {\n      return question.id === answer.question ? /*#__PURE__*/React.createElement(Button, {\n        className: \"answer-buttons\",\n        key: answer.id,\n        onClick: () => {\n          valuateAnswer(answer.is_correct);\n          setTimeout(() => ref.current.next(), 150);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, answer.text) : null;\n    }));\n  })), valCountRef.current === 5 && questionIndex === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizFailedAnimation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FinalQuizAnimationSuccess, {\n    validatedCount: valCountRef.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))) : null, valCountRef.current !== 5 && questionIndex === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizFailedAnimation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FinalQuizAnimationFailed, {\n    validatedCount: valCountRef.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))) : null));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userDataId: state.userDataReducer.id,\n    chapterId: state.chapterReducer.id,\n    user: state.userDataReducer.user\n  };\n};\n\nexport default connect(mapStateToProps)(Quiz);","map":{"version":3,"sources":["C:/dangerzone-react/src/components/Quiz/Quiz.js"],"names":["React","useRef","useState","Carousel","Button","Spin","connect","FinalQuizAnimationFailed","FinalQuizAnimationSuccess","postTestResults","Quiz","props","questionIndex","setQuestionIndex","ref","isCompletedRef","valCountRef","valuateAnswer","answerIsCorrect","current","user","chapterId","userDataId","console","log","questions","undefined","map","question","index","label","answers","answer","id","is_correct","setTimeout","next","text","mapStateToProps","state","userDataReducer","chapterReducer"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Carousel, Button, Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Quiz.css\";\r\nimport { FinalQuizAnimationFailed } from \"../FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\r\nimport { FinalQuizAnimationSuccess } from \"../FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\r\nimport { postTestResults } from \"../../store/actions/quiz\";\r\n\r\nconst Quiz = props => {\r\n  const [questionIndex, setQuestionIndex] = useState(1);\r\n  let ref = useRef();\r\n  let isCompletedRef = useRef(false);\r\n  let valCountRef = useRef(null);\r\n\r\n  const valuateAnswer = answerIsCorrect => {\r\n    setQuestionIndex(questionIndex => questionIndex + 1);\r\n    if (answerIsCorrect === true) {\r\n      valCountRef.current = valCountRef.current + 1;\r\n    }\r\n    if (valCountRef.current > 3) {\r\n      isCompletedRef.current = true;\r\n    }\r\n    if (questionIndex === 6) {\r\n      postTestResults(\r\n        valCountRef.current,\r\n        isCompletedRef.current,\r\n        props.user,\r\n        props.chapterId,\r\n        props.userDataId\r\n      );\r\n    }\r\n  };\r\n\r\n  console.log(props.questionIndex);\r\n\r\n  if (props.questions === undefined) {\r\n    return <Spin size=\"large\" className=\"spinner\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <Carousel ref={ref} className=\"carouselQuiz\">\r\n          {props.questions.questions.map((question, index) => {\r\n            return (\r\n              <>\r\n                <h1 className=\"question-label\">{question.label}</h1>;\r\n                {question.answers.map(answer => {\r\n                  return question.id === answer.question ? (\r\n                    <Button\r\n                      className=\"answer-buttons\"\r\n                      key={answer.id}\r\n                      onClick={() => {\r\n                        valuateAnswer(answer.is_correct);\r\n                        setTimeout(() => ref.current.next(), 150);\r\n                      }}\r\n                    >\r\n                      {answer.text}\r\n                    </Button>\r\n                  ) : null;\r\n                })}\r\n              </>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        {valCountRef.current === 5 && questionIndex === 6 ? (\r\n          <div>\r\n            <div className=\"quizFailedAnimation\">\r\n              <FinalQuizAnimationSuccess validatedCount={valCountRef.current} />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {valCountRef.current !== 5 && questionIndex === 6 ? (\r\n          <div>\r\n            <div className=\"quizFailedAnimation\">\r\n              <FinalQuizAnimationFailed validatedCount={valCountRef.current} />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userDataId: state.userDataReducer.id,\r\n    chapterId: state.chapterReducer.id,\r\n    user: state.userDataReducer.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Quiz);\r\n"]},"metadata":{},"sourceType":"module"}