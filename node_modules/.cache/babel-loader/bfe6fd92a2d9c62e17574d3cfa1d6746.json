{"ast":null,"code":"var _jsxFileName = \"C:\\\\dangerzone-react\\\\src\\\\components\\\\Quiz\\\\Quiz.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Carousel, Button, Spin } from \"antd\";\nimport { connect } from \"react-redux\";\nimport \"./Quiz.css\";\nimport { FinalQuizAnimationFailed } from \"../FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\nimport { FinalQuizAnimationSuccess } from \"../FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\nimport { getQuiz } from \"../../store/actions/quiz\";\nconst token = localStorage.getItem(\"token\");\n\nconst Quiz = props => {\n  useEffect(getQuiz, []);\n  console.log(props);\n\n  if (questions === undefined || questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), \";\");\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      ref: ref,\n      className: \"carouselQuiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, questions.map((question, index) => {\n      return question.chapterTitle === currentChapter ? /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"question-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, question.label), answers.map((answer, index) => {\n        return answer.question === question.id ? /*#__PURE__*/React.createElement(Button, {\n          className: \"answer-buttons\",\n          key: answer.id,\n          onClick: () => {\n            valuateAnswer(answer.is_correct);\n            setTimeout(() => ref.current.next(), 300);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 23\n          }\n        }, answer.text) : null;\n      })) : null;\n    })), valCountRef.current === 5 && questionIndex === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizFailedAnimation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FinalQuizAnimationSuccess, {\n      validatedCount: valCountRef.current,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }))) : null, valCountRef.current !== 5 && questionIndex === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizFailedAnimation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FinalQuizAnimationFailed, {\n      validatedCount: valCountRef.current,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }))) : null));\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuiz: () => {\n      dispatch(getQuiz());\n    }\n  };\n};\n\nexport default Quiz;","map":{"version":3,"sources":["C:/dangerzone-react/src/components/Quiz/Quiz.js"],"names":["React","useRef","useState","useEffect","Carousel","Button","Spin","connect","FinalQuizAnimationFailed","FinalQuizAnimationSuccess","getQuiz","token","localStorage","getItem","Quiz","props","console","log","questions","undefined","length","ref","map","question","index","chapterTitle","currentChapter","label","answers","answer","id","valuateAnswer","is_correct","setTimeout","current","next","text","valCountRef","questionIndex","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Carousel, Button, Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Quiz.css\";\r\nimport { FinalQuizAnimationFailed } from \"../FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\r\nimport { FinalQuizAnimationSuccess } from \"../FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\r\nimport { getQuiz } from \"../../store/actions/quiz\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst Quiz = props => {\r\n  useEffect(getQuiz, []);\r\n\r\n  console.log(props);\r\n\r\n  if (questions === undefined || questions.length === 0) {\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spin size=\"large\" />;\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Carousel ref={ref} className=\"carouselQuiz\">\r\n            {questions.map((question, index) => {\r\n              return question.chapterTitle === currentChapter ? (\r\n                <div key={index}>\r\n                  <h1 className=\"question-label\">{question.label}</h1>\r\n                  {answers.map((answer, index) => {\r\n                    return answer.question === question.id ? (\r\n                      <Button\r\n                        className=\"answer-buttons\"\r\n                        key={answer.id}\r\n                        onClick={() => {\r\n                          valuateAnswer(answer.is_correct);\r\n                          setTimeout(() => ref.current.next(), 300);\r\n                        }}\r\n                      >\r\n                        {answer.text}\r\n                      </Button>\r\n                    ) : null;\r\n                  })}\r\n                </div>\r\n              ) : null;\r\n            })}\r\n          </Carousel>\r\n          {valCountRef.current === 5 && questionIndex === 6 ? (\r\n            <div>\r\n              <div className=\"quizFailedAnimation\">\r\n                <FinalQuizAnimationSuccess\r\n                  validatedCount={valCountRef.current}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {valCountRef.current !== 5 && questionIndex === 6 ? (\r\n            <div>\r\n              <div className=\"quizFailedAnimation\">\r\n                <FinalQuizAnimationFailed\r\n                  validatedCount={valCountRef.current}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getQuiz: () => {\r\n      dispatch(getQuiz());\r\n    }\r\n  };\r\n};\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}