{"ast":null,"code":"import _slicedToArray from\"C:\\\\dangerzone-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from\"react\";import{Carousel,Button,Spin}from\"antd\";import{connect}from\"react-redux\";import\"./Quiz.css\";import{FinalQuizAnimationFailed}from\"../FinalQuizAnimationFailed/FinalQuizAnimationFailed\";import{FinalQuizAnimationSuccess}from\"../FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";import{postTestResults}from\"../../store/actions/quiz\";var Quiz=function Quiz(props){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),questionIndex=_useState2[0],setQuestionIndex=_useState2[1];var ref=useRef();var isCompletedRef=useRef(false);var valCountRef=useRef(null);var valuateAnswer=function valuateAnswer(answerIsCorrect){setQuestionIndex(function(questionIndex){return questionIndex+1;});if(answerIsCorrect===true){valCountRef.current=valCountRef.current+1;}if(valCountRef.current>4){isCompletedRef.current=true;}if(questionIndex===5){postTestResults(valCountRef.current,isCompletedRef.current,props.user,props.chapterId,props.userDataId);}};console.log(props.questions);if(props.questions===undefined){return/*#__PURE__*/React.createElement(Spin,{size:\"large\",className:\"spinner\"});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Carousel,{ref:ref,className:\"carouselQuiz\",\"data-test\":\"carouselQuiz\"},props.questions.questions.map(function(question,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"question-label\",\"data-test\":\"question-label\"},question.label),\";\",question.answers.map(function(answer){return question.id===answer.question?/*#__PURE__*/React.createElement(Button,{className:\"answer-buttons\",\"data-test\":\"answer-buttons\",key:answer.id,onClick:function onClick(){valuateAnswer(answer.is_correct);setTimeout(function(){return ref.current.next();},150);}},answer.text):null;}));})),valCountRef.current===5&&questionIndex===6?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"quizFailedAnimation\",\"data-test\":\"quizFailedAnimation\"},/*#__PURE__*/React.createElement(FinalQuizAnimationSuccess,{validatedCount:valCountRef.current}))):null,valCountRef.current!==5&&questionIndex===6?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"quizFailedAnimation\",\"data-test\":\"quizFailedAnimation\"},/*#__PURE__*/React.createElement(FinalQuizAnimationFailed,{validatedCount:valCountRef.current}))):null));};var mapStateToProps=function mapStateToProps(state){return{userDataId:state.userDataReducer.id,chapterId:state.chapterReducer.id,user:state.userDataReducer.user};};export default connect(mapStateToProps)(Quiz);","map":{"version":3,"sources":["C:/dangerzone-react/src/components/Quiz/Quiz.js"],"names":["React","useRef","useState","Carousel","Button","Spin","connect","FinalQuizAnimationFailed","FinalQuizAnimationSuccess","postTestResults","Quiz","props","questionIndex","setQuestionIndex","ref","isCompletedRef","valCountRef","valuateAnswer","answerIsCorrect","current","user","chapterId","userDataId","console","log","questions","undefined","map","question","index","label","answers","answer","id","is_correct","setTimeout","next","text","mapStateToProps","state","userDataReducer","chapterReducer"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CACA,OAASC,QAAT,CAAmBC,MAAnB,CAA2BC,IAA3B,KAAuC,MAAvC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAO,YAAP,CACA,OAASC,wBAAT,KAAyC,sDAAzC,CACA,OAASC,yBAAT,KAA0C,wDAA1C,CACA,OAASC,eAAT,KAAgC,0BAAhC,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAC,KAAK,CAAI,eACsBT,QAAQ,CAAC,CAAD,CAD9B,wCACbU,aADa,eACEC,gBADF,eAEpB,GAAIC,CAAAA,GAAG,CAAGb,MAAM,EAAhB,CACA,GAAIc,CAAAA,cAAc,CAAGd,MAAM,CAAC,KAAD,CAA3B,CACA,GAAIe,CAAAA,WAAW,CAAGf,MAAM,CAAC,IAAD,CAAxB,CAEA,GAAMgB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,eAAe,CAAI,CACvCL,gBAAgB,CAAC,SAAAD,aAAa,QAAIA,CAAAA,aAAa,CAAG,CAApB,EAAd,CAAhB,CACA,GAAIM,eAAe,GAAK,IAAxB,CAA8B,CAC5BF,WAAW,CAACG,OAAZ,CAAsBH,WAAW,CAACG,OAAZ,CAAsB,CAA5C,CACD,CACD,GAAIH,WAAW,CAACG,OAAZ,CAAsB,CAA1B,CAA6B,CAC3BJ,cAAc,CAACI,OAAf,CAAyB,IAAzB,CACD,CACD,GAAIP,aAAa,GAAK,CAAtB,CAAyB,CACvBH,eAAe,CACbO,WAAW,CAACG,OADC,CAEbJ,cAAc,CAACI,OAFF,CAGbR,KAAK,CAACS,IAHO,CAIbT,KAAK,CAACU,SAJO,CAKbV,KAAK,CAACW,UALO,CAAf,CAOD,CACF,CAjBD,CAmBAC,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,SAAlB,EAEA,GAAId,KAAK,CAACc,SAAN,GAAoBC,SAAxB,CAAmC,CACjC,mBAAO,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,CAAmB,SAAS,CAAC,SAA7B,EAAP,CACD,CACD,mBACE,qDACE,4CACE,oBAAC,QAAD,EAAU,GAAG,CAAEZ,GAAf,CAAoB,SAAS,CAAC,cAA9B,CAA6C,YAAU,cAAvD,EACGH,KAAK,CAACc,SAAN,CAAgBA,SAAhB,CAA0BE,GAA1B,CAA8B,SAACC,QAAD,CAAWC,KAAX,CAAqB,CAClD,mBACE,qDACE,0BAAI,SAAS,CAAC,gBAAd,CAA+B,YAAU,gBAAzC,EACGD,QAAQ,CAACE,KADZ,CADF,KAKGF,QAAQ,CAACG,OAAT,CAAiBJ,GAAjB,CAAqB,SAAAK,MAAM,CAAI,CAC9B,MAAOJ,CAAAA,QAAQ,CAACK,EAAT,GAAgBD,MAAM,CAACJ,QAAvB,cACL,oBAAC,MAAD,EACE,SAAS,CAAC,gBADZ,CAEE,YAAU,gBAFZ,CAGE,GAAG,CAAEI,MAAM,CAACC,EAHd,CAIE,OAAO,CAAE,kBAAM,CACbhB,aAAa,CAACe,MAAM,CAACE,UAAR,CAAb,CACAC,UAAU,CAAC,iBAAMrB,CAAAA,GAAG,CAACK,OAAJ,CAAYiB,IAAZ,EAAN,EAAD,CAA2B,GAA3B,CAAV,CACD,CAPH,EASGJ,MAAM,CAACK,IATV,CADK,CAYH,IAZJ,CAaD,CAdA,CALH,CADF,CAuBD,CAxBA,CADH,CADF,CA4BGrB,WAAW,CAACG,OAAZ,GAAwB,CAAxB,EAA6BP,aAAa,GAAK,CAA/C,cACC,4CACE,2BACE,SAAS,CAAC,qBADZ,CAEE,YAAU,qBAFZ,eAIE,oBAAC,yBAAD,EAA2B,cAAc,CAAEI,WAAW,CAACG,OAAvD,EAJF,CADF,CADD,CASG,IArCN,CAsCGH,WAAW,CAACG,OAAZ,GAAwB,CAAxB,EAA6BP,aAAa,GAAK,CAA/C,cACC,4CACE,2BACE,SAAS,CAAC,qBADZ,CAEE,YAAU,qBAFZ,eAIE,oBAAC,wBAAD,EAA0B,cAAc,CAAEI,WAAW,CAACG,OAAtD,EAJF,CADF,CADD,CASG,IA/CN,CADF,CADF,CAqDD,CAnFD,CAqFA,GAAMmB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC/B,MAAO,CACLjB,UAAU,CAAEiB,KAAK,CAACC,eAAN,CAAsBP,EAD7B,CAELZ,SAAS,CAAEkB,KAAK,CAACE,cAAN,CAAqBR,EAF3B,CAGLb,IAAI,CAAEmB,KAAK,CAACC,eAAN,CAAsBpB,IAHvB,CAAP,CAKD,CAND,CAQA,cAAed,CAAAA,OAAO,CAACgC,eAAD,CAAP,CAAyB5B,IAAzB,CAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Carousel, Button, Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Quiz.css\";\r\nimport { FinalQuizAnimationFailed } from \"../FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\r\nimport { FinalQuizAnimationSuccess } from \"../FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\r\nimport { postTestResults } from \"../../store/actions/quiz\";\r\n\r\nconst Quiz = props => {\r\n  const [questionIndex, setQuestionIndex] = useState(1);\r\n  let ref = useRef();\r\n  let isCompletedRef = useRef(false);\r\n  let valCountRef = useRef(null);\r\n\r\n  const valuateAnswer = answerIsCorrect => {\r\n    setQuestionIndex(questionIndex => questionIndex + 1);\r\n    if (answerIsCorrect === true) {\r\n      valCountRef.current = valCountRef.current + 1;\r\n    }\r\n    if (valCountRef.current > 4) {\r\n      isCompletedRef.current = true;\r\n    }\r\n    if (questionIndex === 5) {\r\n      postTestResults(\r\n        valCountRef.current,\r\n        isCompletedRef.current,\r\n        props.user,\r\n        props.chapterId,\r\n        props.userDataId\r\n      );\r\n    }\r\n  };\r\n\r\n  console.log(props.questions);\r\n\r\n  if (props.questions === undefined) {\r\n    return <Spin size=\"large\" className=\"spinner\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <Carousel ref={ref} className=\"carouselQuiz\" data-test=\"carouselQuiz\">\r\n          {props.questions.questions.map((question, index) => {\r\n            return (\r\n              <>\r\n                <h1 className=\"question-label\" data-test=\"question-label\">\r\n                  {question.label}\r\n                </h1>\r\n                ;\r\n                {question.answers.map(answer => {\r\n                  return question.id === answer.question ? (\r\n                    <Button\r\n                      className=\"answer-buttons\"\r\n                      data-test=\"answer-buttons\"\r\n                      key={answer.id}\r\n                      onClick={() => {\r\n                        valuateAnswer(answer.is_correct);\r\n                        setTimeout(() => ref.current.next(), 150);\r\n                      }}\r\n                    >\r\n                      {answer.text}\r\n                    </Button>\r\n                  ) : null;\r\n                })}\r\n              </>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        {valCountRef.current === 5 && questionIndex === 6 ? (\r\n          <div>\r\n            <div\r\n              className=\"quizFailedAnimation\"\r\n              data-test=\"quizFailedAnimation\"\r\n            >\r\n              <FinalQuizAnimationSuccess validatedCount={valCountRef.current} />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {valCountRef.current !== 5 && questionIndex === 6 ? (\r\n          <div>\r\n            <div\r\n              className=\"quizFailedAnimation\"\r\n              data-test=\"quizFailedAnimation\"\r\n            >\r\n              <FinalQuizAnimationFailed validatedCount={valCountRef.current} />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userDataId: state.userDataReducer.id,\r\n    chapterId: state.chapterReducer.id,\r\n    user: state.userDataReducer.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Quiz);\r\n"]},"metadata":{},"sourceType":"module"}