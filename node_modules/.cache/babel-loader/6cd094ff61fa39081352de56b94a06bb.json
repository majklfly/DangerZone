{"ast":null,"code":"var _jsxFileName = \"C:\\\\dangerzone-react\\\\src\\\\components\\\\Quiz\\\\Quiz.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Carousel, Button, Spin } from \"antd\";\nimport \"./Quiz.css\";\nimport { FinalQuizAnimationFailed } from \"../FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\nimport { FinalQuizAnimationSuccess } from \"../FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\nimport { postTestResults } from \"../../store/actions/quiz\";\n\nconst Quiz = props => {\n  const [questionIndex, setQuestionIndex] = useState(1);\n  let ref = useRef();\n  let isCompletedRef = useRef(false);\n  let valCountRef = useRef(null);\n\n  const valuateAnswer = answerIsCorrect => {\n    setQuestionIndex(questionIndex => questionIndex + 1);\n\n    if (answerIsCorrect === true) {\n      valCountRef.current = valCountRef.current + 1;\n    }\n\n    if (valCountRef.current > 3) {\n      isCompletedRef.current = true;\n    }\n  };\n\n  if (questionIndex === 6) {\n    console.log(\"here we go\");\n  }\n\n  if (props.questions) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      ref: ref,\n      className: \"carouselQuiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, props.questions.questions.map((question, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"question-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, question.label), \";\", question.answers.map(answer => {\n        return question.id === answer.question ? /*#__PURE__*/React.createElement(Button, {\n          className: \"answer-buttons\",\n          key: answer.id,\n          onClick: () => {\n            valuateAnswer(answer.is_correct);\n            setTimeout(() => ref.current.next(), 300);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 23\n          }\n        }, answer.text) : null;\n      }));\n    })), valCountRef.current === 5 && questionIndex === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizFailedAnimation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FinalQuizAnimationSuccess, {\n      validatedCount: valCountRef.current,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }))) : null, valCountRef.current !== 5 && questionIndex === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizFailedAnimation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FinalQuizAnimationFailed, {\n      validatedCount: valCountRef.current,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }))) : null));\n  }\n\n  return /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Quiz;","map":{"version":3,"sources":["C:/dangerzone-react/src/components/Quiz/Quiz.js"],"names":["React","useRef","useState","Carousel","Button","Spin","FinalQuizAnimationFailed","FinalQuizAnimationSuccess","postTestResults","Quiz","props","questionIndex","setQuestionIndex","ref","isCompletedRef","valCountRef","valuateAnswer","answerIsCorrect","current","console","log","questions","map","question","index","label","answers","answer","id","is_correct","setTimeout","next","text"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Carousel, Button, Spin } from \"antd\";\r\n\r\nimport \"./Quiz.css\";\r\nimport { FinalQuizAnimationFailed } from \"../FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\r\nimport { FinalQuizAnimationSuccess } from \"../FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\r\nimport { postTestResults } from \"../../store/actions/quiz\";\r\n\r\nconst Quiz = props => {\r\n  const [questionIndex, setQuestionIndex] = useState(1);\r\n  let ref = useRef();\r\n  let isCompletedRef = useRef(false);\r\n  let valCountRef = useRef(null);\r\n\r\n  const valuateAnswer = answerIsCorrect => {\r\n    setQuestionIndex(questionIndex => questionIndex + 1);\r\n    if (answerIsCorrect === true) {\r\n      valCountRef.current = valCountRef.current + 1;\r\n    }\r\n    if (valCountRef.current > 3) {\r\n      isCompletedRef.current = true;\r\n    }\r\n  };\r\n\r\n  if (questionIndex === 6) {\r\n    console.log(\"here we go\");\r\n  }\r\n\r\n  if (props.questions) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Carousel ref={ref} className=\"carouselQuiz\">\r\n            {props.questions.questions.map((question, index) => {\r\n              return (\r\n                <>\r\n                  <h1 className=\"question-label\">{question.label}</h1>;\r\n                  {question.answers.map(answer => {\r\n                    return question.id === answer.question ? (\r\n                      <Button\r\n                        className=\"answer-buttons\"\r\n                        key={answer.id}\r\n                        onClick={() => {\r\n                          valuateAnswer(answer.is_correct);\r\n                          setTimeout(() => ref.current.next(), 300);\r\n                        }}\r\n                      >\r\n                        {answer.text}\r\n                      </Button>\r\n                    ) : null;\r\n                  })}\r\n                </>\r\n              );\r\n            })}\r\n          </Carousel>\r\n          {valCountRef.current === 5 && questionIndex === 6 ? (\r\n            <div>\r\n              <div className=\"quizFailedAnimation\">\r\n                <FinalQuizAnimationSuccess\r\n                  validatedCount={valCountRef.current}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {valCountRef.current !== 5 && questionIndex === 6 ? (\r\n            <div>\r\n              <div className=\"quizFailedAnimation\">\r\n                <FinalQuizAnimationFailed\r\n                  validatedCount={valCountRef.current}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return <Spin size=\"large\" />;\r\n};\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}