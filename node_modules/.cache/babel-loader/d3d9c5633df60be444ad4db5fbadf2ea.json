{"ast":null,"code":"import server from \"../api/server\";\nimport createDataContext from \"./createDataContext\";\n\nconst quizReducer = (state, action) => {\n  switch (action.type) {\n    case \"post_test_results\":\n      return [...state, {\n        correct_answers: action.payload.correct_answers,\n        completed: action.payload.isCompleted,\n        user: action.payload.userId,\n        chapter: action.payload.chapterId,\n        userData: action.payload.userDataId\n      }];\n\n    default:\n      return state;\n  }\n};\n\nconst postTestResults = dispatch => {\n  return async (correct_answers, isCompleted, userId, chapterId, userDataId) => {\n    try {\n      await server.post(\"/chapterdata/\", {\n        correct_answers: correct_answers,\n        completed: isCompleted,\n        user: userId,\n        chapter: chapterId,\n        userData: userDataId\n      });\n      dispatch({\n        type: \"post_test_results\",\n        payload: {\n          correct_answers,\n          isCompleted,\n          userId,\n          chapterId,\n          userDataId\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const {\n  Context,\n  Provider\n} = createDataContext(quizReducer, {\n  postTestResults\n}, []);","map":{"version":3,"sources":["C:/dangerzone-react/src/context/QuizContext.js"],"names":["server","createDataContext","quizReducer","state","action","type","correct_answers","payload","completed","isCompleted","user","userId","chapter","chapterId","userData","userDataId","postTestResults","dispatch","post","e","console","log","Context","Provider"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,CACL,GAAGF,KADE,EAEL;AACEG,QAAAA,eAAe,EAAEF,MAAM,CAACG,OAAP,CAAeD,eADlC;AAEEE,QAAAA,SAAS,EAAEJ,MAAM,CAACG,OAAP,CAAeE,WAF5B;AAGEC,QAAAA,IAAI,EAAEN,MAAM,CAACG,OAAP,CAAeI,MAHvB;AAIEC,QAAAA,OAAO,EAAER,MAAM,CAACG,OAAP,CAAeM,SAJ1B;AAKEC,QAAAA,QAAQ,EAAEV,MAAM,CAACG,OAAP,CAAeQ;AAL3B,OAFK,CAAP;;AAUF;AACE,aAAOZ,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,MAAMa,eAAe,GAAGC,QAAQ,IAAI;AAClC,SAAO,OACLX,eADK,EAELG,WAFK,EAGLE,MAHK,EAILE,SAJK,EAKLE,UALK,KAMF;AACH,QAAI;AACF,YAAMf,MAAM,CAACkB,IAAP,CAAY,eAAZ,EAA6B;AACjCZ,QAAAA,eAAe,EAAEA,eADgB;AAEjCE,QAAAA,SAAS,EAAEC,WAFsB;AAGjCC,QAAAA,IAAI,EAAEC,MAH2B;AAIjCC,QAAAA,OAAO,EAAEC,SAJwB;AAKjCC,QAAAA,QAAQ,EAAEC;AALuB,OAA7B,CAAN;AAOAE,MAAAA,QAAQ,CAAC;AACPZ,QAAAA,IAAI,EAAE,mBADC;AAEPE,QAAAA,OAAO,EAAE;AAAED,UAAAA,eAAF;AAAmBG,UAAAA,WAAnB;AAAgCE,UAAAA,MAAhC;AAAwCE,UAAAA,SAAxC;AAAmDE,UAAAA;AAAnD;AAFF,OAAD,CAAR;AAID,KAZD,CAYE,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAtBD;AAuBD,CAxBD;;AAyBA,OAAO,MAAM;AAAEG,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAwBtB,iBAAiB,CACpDC,WADoD,EAEpD;AACEc,EAAAA;AADF,CAFoD,EAKpD,EALoD,CAA/C","sourcesContent":["import server from \"../api/server\";\r\n\r\nimport createDataContext from \"./createDataContext\";\r\n\r\nconst quizReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"post_test_results\":\r\n      return [\r\n        ...state,\r\n        {\r\n          correct_answers: action.payload.correct_answers,\r\n          completed: action.payload.isCompleted,\r\n          user: action.payload.userId,\r\n          chapter: action.payload.chapterId,\r\n          userData: action.payload.userDataId\r\n        }\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst postTestResults = dispatch => {\r\n  return async (\r\n    correct_answers,\r\n    isCompleted,\r\n    userId,\r\n    chapterId,\r\n    userDataId\r\n  ) => {\r\n    try {\r\n      await server.post(\"/chapterdata/\", {\r\n        correct_answers: correct_answers,\r\n        completed: isCompleted,\r\n        user: userId,\r\n        chapter: chapterId,\r\n        userData: userDataId\r\n      });\r\n      dispatch({\r\n        type: \"post_test_results\",\r\n        payload: { correct_answers, isCompleted, userId, chapterId, userDataId }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\nexport const { Context, Provider } = createDataContext(\r\n  quizReducer,\r\n  {\r\n    postTestResults\r\n  },\r\n  []\r\n);\r\n"]},"metadata":{},"sourceType":"module"}