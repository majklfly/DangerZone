{"ast":null,"code":"var _jsxFileName = \"C:\\\\dangerzone-react\\\\src\\\\components\\\\Quiz.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Carousel, Button, Spin } from \"antd\";\nimport server from \"../api/server\";\nimport \"./Quiz.css\";\nimport { FinalQuizAnimationFailed } from \"./FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\nimport { FinalQuizAnimationSuccess } from \"./FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\nimport { useSelector } from \"react-redux\";\nconst token = localStorage.getItem(\"token\");\n\nconst Quiz = props => {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [chapterId, setChapterId] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(1);\n  const userData = useSelector(state => state.userDataReducer);\n  let ref = useRef();\n  let isCompletedRef = useRef(false);\n  let valCountRef = useRef(null);\n  const currentChapter = localStorage.getItem(\"currentChapter\");\n\n  const getQuestions = () => {\n    server.get(\"/question/\", {\n      headers: {\n        authorization: `Token ${token}`\n      }\n    }).then(res => {\n      let questionsLocal = [];\n      res.data.map(item => {\n        return item.chapterTitle === currentChapter ? questionsLocal.push(item) : null;\n      });\n      setQuestions(questionsLocal);\n    });\n  };\n\n  const getAnswers = () => {\n    server.get(\"/answer/\", {\n      headers: {\n        authorization: `Token ${token}`\n      }\n    }).then(res => {\n      let answersLocal = [];\n      res.data.map(item => {\n        return item.chapterTitle === currentChapter ? answersLocal.push(item) : null;\n      });\n      setAnswers(answersLocal);\n    });\n  };\n\n  const getChapterId = () => {\n    server.get(\"/chapters/\", {\n      headers: {\n        authorization: `Token ${token}`\n      }\n    }).then(res => {\n      res.data.map(item => {\n        return item.title === currentChapter ? setChapterId(item.id) : null;\n      });\n    });\n  };\n\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n    getChapterId(); // eslint-disable-next-line\n  }, []);\n\n  const valuateAnswer = answerIsCorrect => {\n    setQuestionIndex(questionIndex => questionIndex + 1);\n\n    if (answerIsCorrect === true) {\n      valCountRef.current = valCountRef.current + 1;\n    }\n\n    if (valCountRef.current > 3) {\n      isCompletedRef.current = true;\n    }\n\n    valuateQuiz();\n  };\n\n  const valuateQuiz = () => {\n    const postTestResults = (correct_answers, is_Completed, userId, chapterId, userDataId) => {\n      console.log(\"is_Completed\", is_Completed);\n      console.log(\"correct_answers\", correct_answers);\n      console.log(\"userId\", userId);\n      console.log(\"userDataId\", userDataId);\n      console.log(\"chapterId\", chapterId);\n      server.post(\"/chapterdata/\", {\n        completed: is_Completed,\n        correct_answers: correct_answers,\n        user: userId,\n        userData: userDataId,\n        chapter: chapterId\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    if (questionIndex === 5) {\n      postTestResults(valCountRef.current, isCompletedRef.current, userData.id, chapterId, userData.id);\n    }\n  };\n\n  if (questions === undefined || questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), \";\");\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      ref: ref,\n      className: \"carouselQuiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, questions.map((question, index) => {\n      return question.chapterTitle === currentChapter ? /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"question-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, question.label), answers.map((answer, index) => {\n        return answer.question === question.id ? /*#__PURE__*/React.createElement(Button, {\n          className: \"answer-buttons\",\n          key: answer.id,\n          onClick: () => {\n            valuateAnswer(answer.is_correct);\n            setTimeout(() => ref.current.next(), 300);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 23\n          }\n        }, answer.text) : null;\n      })) : null;\n    })), valCountRef.current === 5 && questionIndex === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizFailedAnimation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FinalQuizAnimationSuccess, {\n      validatedCount: valCountRef.current,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }))) : null, valCountRef.current !== 5 && questionIndex === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizFailedAnimation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FinalQuizAnimationFailed, {\n      validatedCount: valCountRef.current,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }))) : null));\n  }\n};\n\nexport default Quiz;","map":{"version":3,"sources":["C:/dangerzone-react/src/components/Quiz.js"],"names":["React","useRef","useState","useEffect","Carousel","Button","Spin","server","FinalQuizAnimationFailed","FinalQuizAnimationSuccess","useSelector","token","localStorage","getItem","Quiz","props","questions","setQuestions","answers","setAnswers","chapterId","setChapterId","questionIndex","setQuestionIndex","userData","state","userDataReducer","ref","isCompletedRef","valCountRef","currentChapter","getQuestions","get","headers","authorization","then","res","questionsLocal","data","map","item","chapterTitle","push","getAnswers","answersLocal","getChapterId","title","id","valuateAnswer","answerIsCorrect","current","valuateQuiz","postTestResults","correct_answers","is_Completed","userId","userDataId","console","log","post","completed","user","chapter","undefined","length","question","index","label","answer","is_correct","setTimeout","next","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,IAA3B,QAAuC,MAAvC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,YAAP;AACA,SAASC,wBAAT,QAAyC,qDAAzC;AACA,SAASC,yBAAT,QAA0C,uDAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,CAAD,CAAlD;AAEA,QAAMsB,QAAQ,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,eAAhB,CAA5B;AAEA,MAAIC,GAAG,GAAG1B,MAAM,EAAhB;AACA,MAAI2B,cAAc,GAAG3B,MAAM,CAAC,KAAD,CAA3B;AACA,MAAI4B,WAAW,GAAG5B,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAM6B,cAAc,GAAGlB,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAvB;;AAEA,QAAMkB,YAAY,GAAG,MAAM;AACzBxB,IAAAA,MAAM,CACHyB,GADH,CACO,YADP,EACqB;AACjBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,SAAQvB,KAAM;AAAhC;AADQ,KADrB,EAIGwB,IAJH,CAIQC,GAAG,IAAI;AACX,UAAIC,cAAc,GAAG,EAArB;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAI;AACnB,eAAOA,IAAI,CAACC,YAAL,KAAsBX,cAAtB,GACHO,cAAc,CAACK,IAAf,CAAoBF,IAApB,CADG,GAEH,IAFJ;AAGD,OAJD;AAKAvB,MAAAA,YAAY,CAACoB,cAAD,CAAZ;AACD,KAZH;AAaD,GAdD;;AAgBA,QAAMM,UAAU,GAAG,MAAM;AACvBpC,IAAAA,MAAM,CACHyB,GADH,CACO,UADP,EACmB;AACfC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,SAAQvB,KAAM;AAAhC;AADM,KADnB,EAIGwB,IAJH,CAIQC,GAAG,IAAI;AACX,UAAIQ,YAAY,GAAG,EAAnB;AACAR,MAAAA,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAI;AACnB,eAAOA,IAAI,CAACC,YAAL,KAAsBX,cAAtB,GACHc,YAAY,CAACF,IAAb,CAAkBF,IAAlB,CADG,GAEH,IAFJ;AAGD,OAJD;AAKArB,MAAAA,UAAU,CAACyB,YAAD,CAAV;AACD,KAZH;AAaD,GAdD;;AAgBA,QAAMC,YAAY,GAAG,MAAM;AACzBtC,IAAAA,MAAM,CACHyB,GADH,CACO,YADP,EACqB;AACjBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,SAAQvB,KAAM;AAAhC;AADQ,KADrB,EAIGwB,IAJH,CAIQC,GAAG,IAAI;AACXA,MAAAA,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAI;AACnB,eAAOA,IAAI,CAACM,KAAL,KAAehB,cAAf,GAAgCT,YAAY,CAACmB,IAAI,CAACO,EAAN,CAA5C,GAAwD,IAA/D;AACD,OAFD;AAGD,KARH;AASD,GAVD;;AAYA5C,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,YAAY;AACZY,IAAAA,UAAU;AACVE,IAAAA,YAAY,GAHE,CAId;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMG,aAAa,GAAGC,eAAe,IAAI;AACvC1B,IAAAA,gBAAgB,CAACD,aAAa,IAAIA,aAAa,GAAG,CAAlC,CAAhB;;AACA,QAAI2B,eAAe,KAAK,IAAxB,EAA8B;AAC5BpB,MAAAA,WAAW,CAACqB,OAAZ,GAAsBrB,WAAW,CAACqB,OAAZ,GAAsB,CAA5C;AACD;;AACD,QAAIrB,WAAW,CAACqB,OAAZ,GAAsB,CAA1B,EAA6B;AAC3BtB,MAAAA,cAAc,CAACsB,OAAf,GAAyB,IAAzB;AACD;;AACDC,IAAAA,WAAW;AACZ,GATD;;AAWA,QAAMA,WAAW,GAAG,MAAM;AACxB,UAAMC,eAAe,GAAG,CACtBC,eADsB,EAEtBC,YAFsB,EAGtBC,MAHsB,EAItBnC,SAJsB,EAKtBoC,UALsB,KAMnB;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,YAA5B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,eAA/B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBtC,SAAzB;AACAb,MAAAA,MAAM,CACHoD,IADH,CACQ,eADR,EACyB;AACrBC,QAAAA,SAAS,EAAEN,YADU;AAErBD,QAAAA,eAAe,EAAEA,eAFI;AAGrBQ,QAAAA,IAAI,EAAEN,MAHe;AAIrB/B,QAAAA,QAAQ,EAAEgC,UAJW;AAKrBM,QAAAA,OAAO,EAAE1C;AALY,OADzB,EAQGe,IARH,CAQQC,GAAG,IAAI;AACXqB,QAAAA,OAAO,CAACC,GAAR,CAAYtB,GAAZ;AACD,OAVH;AAWD,KAvBD;;AAyBA,QAAId,aAAa,KAAK,CAAtB,EAAyB;AACvB8B,MAAAA,eAAe,CACbvB,WAAW,CAACqB,OADC,EAEbtB,cAAc,CAACsB,OAFF,EAGb1B,QAAQ,CAACuB,EAHI,EAIb3B,SAJa,EAKbI,QAAQ,CAACuB,EALI,CAAf;AAOD;AACF,GAnCD;;AAqCA,MAAI/B,SAAS,KAAK+C,SAAd,IAA2B/C,SAAS,CAACgD,MAAV,KAAqB,CAApD,EAAuD;AACrD,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,MADF;AAKD,GAND,MAMO;AACL,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAErC,GAAf;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,SAAS,CAACuB,GAAV,CAAc,CAAC0B,QAAD,EAAWC,KAAX,KAAqB;AAClC,aAAOD,QAAQ,CAACxB,YAAT,KAA0BX,cAA1B,gBACL;AAAK,QAAA,GAAG,EAAEoC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCD,QAAQ,CAACE,KAAzC,CADF,EAEGjD,OAAO,CAACqB,GAAR,CAAY,CAAC6B,MAAD,EAASF,KAAT,KAAmB;AAC9B,eAAOE,MAAM,CAACH,QAAP,KAAoBA,QAAQ,CAAClB,EAA7B,gBACL,oBAAC,MAAD;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,GAAG,EAAEqB,MAAM,CAACrB,EAFd;AAGE,UAAA,OAAO,EAAE,MAAM;AACbC,YAAAA,aAAa,CAACoB,MAAM,CAACC,UAAR,CAAb;AACAC,YAAAA,UAAU,CAAC,MAAM3C,GAAG,CAACuB,OAAJ,CAAYqB,IAAZ,EAAP,EAA2B,GAA3B,CAAV;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQGH,MAAM,CAACI,IARV,CADK,GAWH,IAXJ;AAYD,OAbA,CAFH,CADK,GAkBH,IAlBJ;AAmBD,KApBA,CADH,CADF,EAwBG3C,WAAW,CAACqB,OAAZ,KAAwB,CAAxB,IAA6B5B,aAAa,KAAK,CAA/C,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,yBAAD;AACE,MAAA,cAAc,EAAEO,WAAW,CAACqB,OAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADD,GAQG,IAhCN,EAiCGrB,WAAW,CAACqB,OAAZ,KAAwB,CAAxB,IAA6B5B,aAAa,KAAK,CAA/C,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,wBAAD;AACE,MAAA,cAAc,EAAEO,WAAW,CAACqB,OAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADD,GAQG,IAzCN,CADF,CADF;AA+CD;AACF,CAzKD;;AA0KA,eAAepC,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Carousel, Button, Spin } from \"antd\";\r\nimport server from \"../api/server\";\r\nimport \"./Quiz.css\";\r\nimport { FinalQuizAnimationFailed } from \"./FinalQuizAnimationFailed/FinalQuizAnimationFailed\";\r\nimport { FinalQuizAnimationSuccess } from \"./FinalQuizAnimationSuccess/FinalQuizAnimationSuccess\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst Quiz = props => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [chapterId, setChapterId] = useState(0);\r\n\r\n  const [questionIndex, setQuestionIndex] = useState(1);\r\n\r\n  const userData = useSelector(state => state.userDataReducer);\r\n\r\n  let ref = useRef();\r\n  let isCompletedRef = useRef(false);\r\n  let valCountRef = useRef(null);\r\n\r\n  const currentChapter = localStorage.getItem(\"currentChapter\");\r\n\r\n  const getQuestions = () => {\r\n    server\r\n      .get(\"/question/\", {\r\n        headers: { authorization: `Token ${token}` }\r\n      })\r\n      .then(res => {\r\n        let questionsLocal = [];\r\n        res.data.map(item => {\r\n          return item.chapterTitle === currentChapter\r\n            ? questionsLocal.push(item)\r\n            : null;\r\n        });\r\n        setQuestions(questionsLocal);\r\n      });\r\n  };\r\n\r\n  const getAnswers = () => {\r\n    server\r\n      .get(\"/answer/\", {\r\n        headers: { authorization: `Token ${token}` }\r\n      })\r\n      .then(res => {\r\n        let answersLocal = [];\r\n        res.data.map(item => {\r\n          return item.chapterTitle === currentChapter\r\n            ? answersLocal.push(item)\r\n            : null;\r\n        });\r\n        setAnswers(answersLocal);\r\n      });\r\n  };\r\n\r\n  const getChapterId = () => {\r\n    server\r\n      .get(\"/chapters/\", {\r\n        headers: { authorization: `Token ${token}` }\r\n      })\r\n      .then(res => {\r\n        res.data.map(item => {\r\n          return item.title === currentChapter ? setChapterId(item.id) : null;\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n    getAnswers();\r\n    getChapterId();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const valuateAnswer = answerIsCorrect => {\r\n    setQuestionIndex(questionIndex => questionIndex + 1);\r\n    if (answerIsCorrect === true) {\r\n      valCountRef.current = valCountRef.current + 1;\r\n    }\r\n    if (valCountRef.current > 3) {\r\n      isCompletedRef.current = true;\r\n    }\r\n    valuateQuiz();\r\n  };\r\n\r\n  const valuateQuiz = () => {\r\n    const postTestResults = (\r\n      correct_answers,\r\n      is_Completed,\r\n      userId,\r\n      chapterId,\r\n      userDataId\r\n    ) => {\r\n      console.log(\"is_Completed\", is_Completed);\r\n      console.log(\"correct_answers\", correct_answers);\r\n      console.log(\"userId\", userId);\r\n      console.log(\"userDataId\", userDataId);\r\n      console.log(\"chapterId\", chapterId);\r\n      server\r\n        .post(\"/chapterdata/\", {\r\n          completed: is_Completed,\r\n          correct_answers: correct_answers,\r\n          user: userId,\r\n          userData: userDataId,\r\n          chapter: chapterId\r\n        })\r\n        .then(res => {\r\n          console.log(res);\r\n        });\r\n    };\r\n\r\n    if (questionIndex === 5) {\r\n      postTestResults(\r\n        valCountRef.current,\r\n        isCompletedRef.current,\r\n        userData.id,\r\n        chapterId,\r\n        userData.id\r\n      );\r\n    }\r\n  };\r\n\r\n  if (questions === undefined || questions.length === 0) {\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spin size=\"large\" />;\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Carousel ref={ref} className=\"carouselQuiz\">\r\n            {questions.map((question, index) => {\r\n              return question.chapterTitle === currentChapter ? (\r\n                <div key={index}>\r\n                  <h1 className=\"question-label\">{question.label}</h1>\r\n                  {answers.map((answer, index) => {\r\n                    return answer.question === question.id ? (\r\n                      <Button\r\n                        className=\"answer-buttons\"\r\n                        key={answer.id}\r\n                        onClick={() => {\r\n                          valuateAnswer(answer.is_correct);\r\n                          setTimeout(() => ref.current.next(), 300);\r\n                        }}\r\n                      >\r\n                        {answer.text}\r\n                      </Button>\r\n                    ) : null;\r\n                  })}\r\n                </div>\r\n              ) : null;\r\n            })}\r\n          </Carousel>\r\n          {valCountRef.current === 5 && questionIndex === 6 ? (\r\n            <div>\r\n              <div className=\"quizFailedAnimation\">\r\n                <FinalQuizAnimationSuccess\r\n                  validatedCount={valCountRef.current}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {valCountRef.current !== 5 && questionIndex === 6 ? (\r\n            <div>\r\n              <div className=\"quizFailedAnimation\">\r\n                <FinalQuizAnimationFailed\r\n                  validatedCount={valCountRef.current}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}