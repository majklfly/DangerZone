{"ast":null,"code":"var _jsxFileName = \"C:\\\\dangerzone-react\\\\src\\\\context\\\\createDataContext.js\";\nimport React, { useReducer } from \"react\";\nexport default ((reducer, actions, initialState) => {\n  const Context = React.createContext();\n\n  const Provider = ({\n    children\n  }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const boundActions = {};\n\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: {\n        state,\n        ...boundActions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, children);\n  };\n\n  return {\n    Context,\n    Provider\n  };\n});","map":{"version":3,"sources":["C:/dangerzone-react/src/context/createDataContext.js"],"names":["React","useReducer","reducer","actions","initialState","Context","createContext","Provider","children","state","dispatch","boundActions","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,gBAAe,CAACC,OAAD,EAAUC,OAAV,EAAmBC,YAAnB,KAAoC;AACjD,QAAMC,OAAO,GAAGL,KAAK,CAACM,aAAN,EAAhB;;AAEA,QAAMC,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACjC,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACC,OAAD,EAAUE,YAAV,CAApC;AAEA,UAAMO,YAAY,GAAG,EAArB;;AACA,SAAK,IAAIC,GAAT,IAAgBT,OAAhB,EAAyB;AACvBQ,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBT,OAAO,CAACS,GAAD,CAAP,CAAaF,QAAb,CAApB;AACD;;AAED,wBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAF;AAAS,WAAGE;AAAZ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,QADH,CADF;AAKD,GAbD;;AAeA,SAAO;AAAEH,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAP;AACD,CAnBD","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, initialState) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const boundActions = {};\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n\r\n  return { Context, Provider };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}