{"ast":null,"code":"import*as actionTypes from\"./actionTypes\";import server from\"../../api/server\";export var authStart=function authStart(userData){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token,userData){return{type:actionTypes.AUTH_SUCCESS,token:token,userData:localStorage.getItem(\"username\")};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){localStorage.removeItem(\"token\");localStorage.removeItem(\"length\");localStorage.removeItem(\"username\");localStorage.removeItem(\"currentChapter\");localStorage.removeItem(\"userId\");localStorage.removeItem(\"persist:root\");window.location.reload();return{type:actionTypes.AUTH_LOGOUT};};export var authLogin=function authLogin(username,password){return function(dispatch){dispatch(authStart());console.log(\"AuthLogin \",username,password);localStorage.setItem(\"username\",username);var userData=localStorage.getItem(\"username\");server.post(\"/rest-auth/login/\",{username:username,password:password}).then(function(res){var token=res.data.key;localStorage.setItem(\"token\",token);dispatch(authSuccess(token,userData));}).catch(function(err){dispatch(authFail(err));});};};export var authSignup=function authSignup(username,email,password1,password2){return function(dispatch){dispatch(authStart());server.post(\"/rest-auth/registration\",{username:username,email:email,password1:password1,password2:password2}).then(function(res){var token=res.data.key;localStorage.setItem(\"token\",token);dispatch(authSuccess(token));}).catch(function(err){dispatch(authFail(err));});};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem(\"token\");if(token===undefined){dispatch(logout());}else{dispatch(authSuccess(token));}};};","map":{"version":3,"sources":["C:/dangerzone-react/src/store/actions/auth.js"],"names":["actionTypes","server","authStart","userData","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","localStorage","getItem","authFail","error","AUTH_FAIL","logout","removeItem","window","location","reload","AUTH_LOGOUT","authLogin","username","password","dispatch","console","log","setItem","post","then","res","data","key","catch","err","authSignup","email","password1","password2","authCheckState","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\nimport server from \"../../api/server\";\r\n\r\nexport const authStart = userData => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userData) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n    userData: localStorage.getItem(\"username\")\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"length\");\r\n  localStorage.removeItem(\"username\");\r\n  localStorage.removeItem(\"currentChapter\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"persist:root\");\r\n  window.location.reload();\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const authLogin = (username, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    console.log(\"AuthLogin \", username, password);\r\n    localStorage.setItem(\"username\", username);\r\n    const userData = localStorage.getItem(\"username\");\r\n    server\r\n      .post(\"/rest-auth/login/\", { username, password })\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        localStorage.setItem(\"token\", token);\r\n        dispatch(authSuccess(token, userData));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    server\r\n      .post(\"/rest-auth/registration\", {\r\n        username,\r\n        email,\r\n        password1,\r\n        password2\r\n      })\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        localStorage.setItem(\"token\", token);\r\n        dispatch(authSuccess(token));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === undefined) {\r\n      dispatch(logout());\r\n    } else {\r\n      dispatch(authSuccess(token));\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}